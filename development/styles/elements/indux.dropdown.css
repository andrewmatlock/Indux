/* Dropdowns */

@layer components {

    :where(menu[popover]) {
        position-try-fallbacks: flip-inline, flip-block, flip-start;
        position-area: end span-end;
        inset: auto;
        flex-flow: column nowrap;
        gap: 0;
        width: fit-content;
        min-width: 160px;
        height: fit-content;
        max-height: 90vh;
        margin: var(--spacing-popover-offset) 0;
        padding: 0.25rem;
        z-index: 50;
        list-style: none;
        background: var(--color-popover-surface);
        border: 0 none;
        border-radius: 8px;
        box-shadow: rgba(15, 15, 15, 0.05) 0px 0px 0px 1px, rgba(15, 15, 15, 0.1) 0px 3px 6px, rgba(15, 15, 15, 0.2) 0px 9px 24px;
        transform-origin: top center;

        /* Options */
        & :where(li, a, button, label) {
            display: inline-flex;
            justify-content: start;
            align-items: center;
            width: 100%;
            max-width: 100%;
            min-height: 2rem;
            padding-left: 0.5rem;
            padding-right: 0.5rem;
            font-weight: normal;
            color: var(--color-content-stark);
            text-align: start;
            text-decoration: none;
            text-overflow: ellipsis;
            overflow: hidden;
            white-space: nowrap;
            background-color: transparent;
            border-radius: 6px;
            cursor: pointer;
            user-select: none;

            &:hover {
                color: var(--color-field-inverse);
                text-decoration: inherit;
                background-color: var(--color-field-surface);
            }

            &:active {
                color: var(--color-field-inverse);
                background-color: var(--color-field-surface);
            }

            & span,
            & [x-icon] {
                color: inherit
            }

            /* Leading icons */
            & [x-icon]:first-child:not(:only-child) {
                margin-right: 0.375rem
            }
        }

        /* Titles */
        & small {
            padding: 0.25rem 0.5rem;
            color: var(--color-content-neutral);
        }

        /* Horizontal rules (offset to ignore menu padding) */
        & hr {
            flex-shrink: 0;
            width: calc(100% + 0.25rem * 2);
            margin-left: calc(0.25rem * -1);
            margin-top: 0.25rem;
            margin-bottom: 0.25rem;
            background-color: var(--color-line, oklch(48.3% 0.006422 17.4 / 0.15));
        }

        /* Labels */
        & label {
            padding-left: 0.5rem;
            padding-right: 0.5rem;
            cursor: default;

            &:hover {
                background-color: transparent
            }

            &:has( input[role="switch"]) {
                justify-content: space-between
            }
        }

        /* Inputs and textareas */
        & :where(input, textarea) {
            flex-shrink: 0;

            &:not(:first-child) {
                margin-top: var(--spacing)
            }
        }

        /* Spans */
        & span {
            text-overflow: ellipsis;
            overflow: hidden;
            white-space: nowrap
        }
    }

    /* Nested menu alignment */
    :where(menu menu) {
        position-area: span-end end;
        margin: 0 var(--spacing-popover-offset)
    }

    /* Center alignment */
    :where(menu.center) {
        position-area: center;
    }

    /* Top alignment */

    :where(menu.top) {
        position-area: top;
        margin: var(--spacing-popover-offset) 0
    }

    /* Bottom alignment */
    :where(menu.bottom) {
        position-area: bottom;
        margin: var(--spacing-popover-offset) 0
    }

    /* Start alignment */
    :where(menu.start) {
        position-area: center start;
        margin: 0 var(--spacing-popover-offset)
    }

    /* End alignment */
    :where(menu.end) {
        position-area: center end;
        margin: 0 var(--spacing-popover-offset)
    }

    /* Top start alignment */
    :where(menu.top-start) {
        position-area: start span-end;
        margin: var(--spacing-popover-offset) 0
    }

    /* Top end alignment */
    :where(menu.top-end) {
        position-area: start span-start;
        margin: var(--spacing-popover-offset) 0
    }

    /* Bottom start alignment */
    :where(menu.bottom-start) {
        position-area: end span-end;
        margin: var(--spacing-popover-offset) 0
    }

    /* Bottom end alignment */
    :where(menu.bottom-end) {
        position-area: end span-start;
        margin: var(--spacing-popover-offset) 0
    }

    /* Start top alignment */
    :where(menu.start-top) {
        position-area: span-end start;
        margin: 0 var(--spacing-popover-offset)
    }

    /* Start bottom alignment */
    :where(menu.start-bottom) {
        position-area: span-start start;
        margin: 0 var(--spacing-popover-offset)
    }
    

    /* End top alignment */
    :where(menu.end-top) {
        position-area: span-end end;
        margin: 0 var(--spacing-popover-offset)
    }
    
    /* End bottom alignment */
    :where(menu.end-bottom) {
        position-area: span-start end;
        margin: 0 var(--spacing-popover-offset)
    }

    /* Top start corner alignment */
    :where(menu.top-start-corner, menu.start-top-corner) {
        position-area: start start;
        margin: var(--spacing-popover-offset)
    }
    
    /* Top end corner alignment */
    :where(menu.top-end-corner, menu.end-top-corner) {
        position-area: start end;
        margin: var(--spacing-popover-offset)
    }
    
    
    /* Bottom start corner alignment */
    :where(menu.bottom-start-corner, menu.start-bottom-corner) {
        position-area: end start;
        margin: var(--spacing-popover-offset)
    }
    
    
    /* Bottom end corner alignment */
    :where(menu.bottom-end-corner, menu.end-bottom-corner) {
        position-area: end end;
        margin: var(--spacing-popover-offset)
    }
}